##### CONSTANT BOILER PLATE #######
DIRPATH=.\src
BINPATH=.\bin
OBJPATH=.\obj
TESTPATH=.\test

FILENAME=sample
TESTNAME=test_sample


### app file ending ###
# $(MAKE_CALL) code here 
!ifndef 0 # \	
EXE_FILETYPE=.exe # \
!else
# Make code here 
EXE_FILETYPE=#
#
!endif


INCL= 
CC=gcc
CFLAGS= #-I $(INCL)


TESTBIN=$(OBJPATH)\$(TESTNAME).o
CTEST=$(TESTPATH)\$(TESTNAME).c
TEST_EXE=$(BINPATH)\$(TESTNAME)$(EXE_FILETYPE)

SOURCES = $(CTEST)
HEADERS = 
APPS = $(TEST_EXE)

FILEBIN=$(OBJPATH)\$(FILENAME).o
CFILE=$(DIRPATH)\$(FILENAME).c
FILE_EXE=$(BINPATH)\$(FILENAME)$(EXE_FILETYPE)

SOURCES = $(SOURCES) $(CFILE)
HEADERS = $(HEADERS) $(DIRPATH)\$(FILENAME).h
APPS = $(APPS) $(FILE_EXE)


##### VARYING FILE BOILER PLATE #######
UTILPATH=$(DIRPATH)\util
OBJ1NAME=isMagicSquare
OBJ1SRC=$(UTILPATH)\$(OBJ1NAME).c
OBJ1HDR=$(UTILPATH)\$(OBJ1NAME).h
OBJ1=$(OBJPATH)\$(OBJ1NAME).o

SOURCES = $(SOURCES) $(OBJ1SRC)
HEADERS = $(HEADERS) $(OBJ1HDR)
OBJECTS = $(OBJECTS) $(OBJ1)
OBJSRCS = $(SOURCES) $(OBJ1SRC)
OBJBUILDS = 1


UTILPATH=$(UTILPATH)
OBJ2NAME=matrixAnalysis
OBJ2SRC=$(UTILPATH)\$(OBJ2NAME).c
OBJ2HDR=$(UTILPATH)\$(OBJ2NAME).h
OBJ2=$(OBJPATH)\$(OBJ2NAME).o

SOURCES = $(SOURCES) $(OBJ2SRC)
HEADERS = $(HEADERS) $(OBJ2HDR)
OBJECTS = $(OBJECTS) $(OBJ2)
OBJSRCS = $(SOURCES) $(OBJ1SRC)
OBJBUILDS = $(OBJBUILDS) 2


UTILPATH=$(UTILPATH)
OBJ3NAME=matrixGenerator
OBJ3SRC=$(UTILPATH)\$(OBJ3NAME).c
OBJ3HDR=$(UTILPATH)\$(OBJ3NAME).h
OBJ3=$(OBJPATH)\$(OBJ3NAME).o

SOURCES = $(SOURCES) $(OBJ3SRC)
HEADERS = $(HEADERS) $(OBJ3HDR)
OBJECTS = $(OBJECTS) $(OBJ3)
OBJSRCS = $(SOURCES) $(OBJ1SRC)
OBJBUILDS = $(OBJBUILDS) 3


UTILPATH=$(UTILPATH)
OBJ4NAME=matriceDisplay
OBJ4SRC=$(UTILPATH)\$(OBJ4NAME).c
OBJ4HDR=$(UTILPATH)\$(OBJ4NAME).h
OBJ4=$(OBJPATH)\$(OBJ4NAME).o

SOURCES = $(SOURCES) $(OBJ4SRC)
HEADERS = $(HEADERS) $(OBJ4HDR)
OBJECTS = $(OBJECTS) $(OBJ4)
OBJSRCS = $(SOURCES) $(OBJ1SRC)
OBJBUILDS = $(OBJBUILDS) 4




TEST_OBJ0PATH=$(TESTPATH)
TEST_OBJ0NAME=test
TEST_OBJ0SRC=$(TEST_OBJ0PATH)\$(TEST_OBJ0NAME).c
TEST_OBJ0HDR=$(TEST_OBJ0PATH)\$(TEST_OBJ0NAME).h
TEST_OBJ0=$(OBJPATH)\$(TEST_OBJ0NAME).o

SOURCES = $(SOURCES) $(TEST_OBJ0SRC)
HEADERS = $(HEADERS) $(TEST_OBJ0HDR)
OBJECTS = $(OBJECTS) $(TEST_OBJ0)
OBJSRCS = $(SOURCES) $(TEST_OBJ0SRC)
TEST_OBJBUILDS = $(TEST_OBJBUILDS) 0


TEST_UTILPATH=$(TESTPATH)\util


TEST_OBJ1PATH=$(TEST_UTILPATH)
TEST_OBJ1NAME=test_$(OBJ1NAME)
TEST_OBJ1SRC=$(TEST_OBJ1PATH)\$(TEST_OBJ1NAME).c
TEST_OBJ1HDR=$(TEST_OBJ1PATH)\$(TEST_OBJ1NAME).h
TEST_OBJ1=$(OBJPATH)\$(TEST_OBJ1NAME).o

SOURCES = $(SOURCES) $(TEST_OBJ1SRC)
HEADERS = $(HEADERS) $(TEST_OBJ1HDR)
TEST_OBJECTS = $(TEST_OBJECTS) $(TEST_OBJ1)
OBJSRCS = $(SOURCES) $(TEST_OBJ1SRC)
TEST_OBJBUILDS = $(TEST_OBJBUILDS) 1


TEST_OBJ2PATH=$(TEST_UTILPATH)
TEST_OBJ2NAME=test_$(OBJ2NAME)
TEST_OBJ2SRC=$(TEST_OBJ2PATH)\$(TEST_OBJ2NAME).c
TEST_OBJ2HDR=$(TEST_OBJ2PATH)\$(TEST_OBJ2NAME).h
TEST_OBJ2=$(OBJPATH)\$(TEST_OBJ2NAME).o

SOURCES = $(SOURCES) $(TEST_OBJ2SRC)
HEADERS = $(HEADERS) $(TEST_OBJ2HDR)
TEST_OBJECTS = $(TEST_OBJECTS) $(TEST_OBJ2)
OBJSRCS = $(SOURCES) $(TEST_OBJ2SRC)
TEST_OBJBUILDS = $(TEST_OBJBUILDS) 2


TEST_OBJ3PATH=$(TEST_UTILPATH)
TEST_OBJ3NAME=test_$(OBJ3NAME)
TEST_OBJ3SRC=$(TEST_OBJ3PATH)\$(TEST_OBJ3NAME).c
TEST_OBJ3HDR=$(TEST_OBJ3PATH)\$(TEST_OBJ3NAME).h
TEST_OBJ3=$(OBJPATH)\$(TEST_OBJ3NAME).o

SOURCES = $(SOURCES) $(TEST_OBJ3SRC)
HEADERS = $(HEADERS) $(TEST_OBJ3HDR)
TEST_OBJECTS = $(TEST_OBJECTS) $(TEST_OBJ3)
OBJSRCS = $(SOURCES) $(TEST_OBJ3SRC)
TEST_OBJBUILDS = $(TEST_OBJBUILDS) 3



# Code below should allow $(MAKE_CALL) and make to operate successfully
# $(MAKE_CALL) code here \
!ifndef 0# \
MV = move # \
RM=del # \
RMDIR=rmdir # \
CP=copy # \
MAKE_CALL=nmake # \
!else
ifeq (0,0) #
# Make code here 
MV=mv -f # 
RM=rm -f #
RMDIR=rm -rf
CP=cp -f # 
MAKE_CALL=make #
endif #
# \
!endif 



##### CONSTANT BUILD #######
MAKE: $(FILEBIN) $(TESTBIN) $(OBJECTS) $(TEST_OBJECTS)
	$(CC) $(CFLAGS) $(FILEBIN) $(OBJECTS) -o $(FILE_EXE)
	$(CC) $(CFLAGS) $(TESTBIN) $(OBJECTS) $(TEST_OBJECTS) -o $(TEST_EXE)
	$(MAKE_CALL) clean_up

MAKE_OBJ: $(FILEBIN) $(TESTBIN) $(OBJECTS)
	$(CC) $(CFLAGS) $(FILEBIN) $(OBJECTS) -o $(FILE_EXE)
	$(CC) $(CFLAGS) $(TESTBIN) $(OBJECTS) -o $(TEST_EXE)

fast: $(TESTBIN) $(OBJECTS)
	$(CC) $(CFLAGS) $(OBJECTS) -o $(FILE_EXE)
	$(CC) $(CFLAGS) $(TESTBIN) $(OBJECTS) -o $(TEST_EXE)
	$(MAKE_CALL) clean_up

$(FILEBIN): $(CFILE)
	$(MAKE_CALL) BUILD_DIR
	$(MAKE_CALL) build
	$(MAKE_CALL) BUILD_OBJ
	$(CC) -c $(CFLAGS) $(CFILE) -o $(FILEBIN)

$(TESTBIN): $(CTEST)
	$(MAKE_CALL) build
	$(CC) -c $(CFLAGS) $(CTEST) -o $(TESTBIN)
	$(MAKE_CALL) BUILD_OBJ


MAKE_TEST: $(TESTBIN) $(OBJECTS) $(TEST_OBJECTS)
	$(CC) $(CFLAGS) $(TESTBIN) $(OBJECTS) $(TEST_OBJECTS) -o $(TEST_EXE)
	$(MAKE_CALL) clean_up

MAKE_CORE: $(FILEBIN) $(OBJECTS)
	$(CC) $(CFLAGS) $(FILEBIN) $(OBJECTS) -o $(FILE_EXE)
	$(MAKE_CALL) clean_up

build::
	$(CP) blankmake Makefile
	FOR %%i IN ($(TEST_OBJBUILDS))\
		DO \
		@echo( $$(CC) $$(CFLAGS) -c $$(TEST_OBJ%%iSRC) -o $$(TEST_OBJ%%i) >> Makefile
	FOR %%i IN ($(OBJBUILDS))\
		DO \
		@echo( $$(CC) $$(CFLAGS) -c $$(OBJ%%iSRC) -o $$(OBJ%%i) >> Makefile

run:
	($(FILE_EXE))

test:
	($(TEST_EXE))

array_test:
	($(TEST_EXE)) ARGS="3 {{4,9,2},{3,5,7},{8,1,6}}"

clean:
	$(RM) $(APPS)
	$(RMDIR) $(BINPATH)

clean_up:
	$(RM) $(FILEBIN) $(TESTBIN) $(OBJECTS) $(TEST_OBJECTS)
	$(RMDIR) $(OBJPATH)

clean_all:
	$(MAKE_CALL) clean_up
	$(MAKE_CALL) clean

BUILD_DIR:
	mkdir $(BINPATH)
	mkdir $(OBJPATH)
	
BUILD_OBJ:
	@echo building...
#####	VARIABLE BUILD	#####
